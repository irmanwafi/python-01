################### Basic

#  â”œâ”€â”€ ðŸŸ¢ Basics (Foundation)
#  â”‚    â”œâ”€â”€ Variables & Data Types (int, str, list, dict, tuple, set)
#  â”‚    â”œâ”€â”€ Operators (+, -, *, /, %, //, **, etc.)
#  â”‚    â”œâ”€â”€ Conditionals (if, elif, else)
#  â”‚    â”œâ”€â”€ Loops (for, while, break, continue)
#  â”‚    â”œâ”€â”€ Input & Output (print(), input())
#  â”‚    â”œâ”€â”€ Exception Handling (try, except, finally)
#  â”‚    â”œâ”€â”€ File Handling (open(), read(), write(), close())
#  â”‚
#  â”œâ”€â”€ ðŸ”µ Functions (Code Reusability)
#  â”‚    â”œâ”€â”€ Defining Functions (def, return)
#  â”‚    â”œâ”€â”€ Function Arguments (positional, keyword, default, *args, **kwargs)
#  â”‚    â”œâ”€â”€ Lambda Functions (Anonymous functions)
#  â”‚
#  â”œâ”€â”€ ðŸ”´ Object-Oriented Programming (OOP)
#  â”‚    â”œâ”€â”€ Classes & Objects
#  â”‚    â”œâ”€â”€ Methods & Variables
#  â”‚    â”œâ”€â”€ Inheritance ("Is a" relationship)
#  â”‚    â”œâ”€â”€ Composition ("Has a" relationship)
#  â”‚    â”œâ”€â”€ Encapsulation (Hiding data)
#  â”‚    â”œâ”€â”€ Abstraction (Hiding implementation)
#  â”‚    â”œâ”€â”€ Polymorphism (Same function, different behavior)
#  â”‚    â”œâ”€â”€ Magic Methods (__init__, __str__, __len__, etc.)
#  â”‚
#  â”œâ”€â”€ ðŸŸ  Advanced Python
#  â”‚    â”œâ”€â”€ Iterators & Generators (yield, next())
#  â”‚    â”œâ”€â”€ Decorators (@staticmethod, @classmethod, @property, custom decorators)
#  â”‚    â”œâ”€â”€ Context Managers (with open() as file)
#  â”‚    â”œâ”€â”€ Multithreading & Multiprocessing (threading, multiprocessing)
#  â”‚    â”œâ”€â”€ Async Programming (async, await, asyncio)
#  â”‚    â”œâ”€â”€ Metaprogramming (type(), metaclasses)
#  â”‚
#  â”œâ”€â”€ ðŸŸ£ Python Modules & Libraries
#  â”‚    â”œâ”€â”€ Built-in Modules (math, datetime, os, sys, random, json)
#  â”‚    â”œâ”€â”€ Web Scraping (BeautifulSoup, Scrapy)
#  â”‚    â”œâ”€â”€ Data Science (NumPy, Pandas, Matplotlib, Seaborn)
#  â”‚    â”œâ”€â”€ Machine Learning (scikit-learn, TensorFlow, PyTorch)
#  â”‚    â”œâ”€â”€ Web Development (Flask, Django, FastAPI)
#  â”‚    â”œâ”€â”€ Database Handling (SQLite, MySQL, PostgreSQL, MariaDB)
#  â”‚    â”œâ”€â”€ Automation & Scripting (Selenium, PyAutoGUI)
#  â”‚
#  â”œâ”€â”€ ðŸŸ¤ Testing & Debugging
#  â”‚    â”œâ”€â”€ Unit Testing (unittest, pytest)
#  â”‚    â”œâ”€â”€ Debugging (pdb, logging)
#  â”‚
#  â”œâ”€â”€ âš« Python for Specific Use Cases
#  â”‚    â”œâ”€â”€ Cybersecurity & Ethical Hacking (Scapy, Requests)
#  â”‚    â”œâ”€â”€ Game Development (Pygame)
#  â”‚    â”œâ”€â”€ Blockchain & Crypto (Web3.py)
#  â”‚    â”œâ”€â”€ IoT & Hardware (Raspberry Pi, MicroPython)
